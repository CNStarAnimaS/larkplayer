{"version":3,"sources":["../js/component.js"],"names":["Dom","DomData","Fn","document","window","Component","player","options","ready","play","id","el","name","createEl","eventBusKey","children","childNameIndex","initChildren","trigger","type","bubbles","parentNode","removeChild","off","forEach","child","dispose","tagName","properties","attributes","contentEl","length","ComponentClass","getComponent","componentName","push","appendChild","fn","isReady","setTimeout","call","readyQueue","selector","context","$","$$","classToCheck","hasClass","classToAdd","addClass","classToRemove","removeClass","classToToggle","toggleClass","attribute","getAttribute","value","setAttribute","removeAttribute","focus","blur","component","components"],"mappings":"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","file":"component.js","sourcesContent":["/**\n * @file class Componet 所有 UI 的基类\n * @author yuhui06@baidu.com\n * @date 2017/11/4\n * @todo 支持 tap 事件\n */\n\nimport * as Dom from './utils/dom';\nimport * as DomData from './utils/dom-data';\nimport * as Fn from './utils/fn';\nimport {newGUID} from './utils/guid';\nimport toTitleCase from './utils/to-title-case';\nimport mergeOptions from './utils/merge-options';\nimport evented from './mixins/evented';\n\nconst document = window.document;\n\nexport default class Component {\n    constructor(player, options, ready) {\n        if (!player && this.play) {\n            this.player = player = this;\n        } else {\n            this.player = player;\n        }\n\n        // 避免覆盖 prototype.options\n        this.options = mergeOptions({}, this.options);\n        options = this.options = mergeOptions(this.options, options);\n        this.id = options.id || (options.el && options.el.id);\n        if (!this.id) {\n            const id = player && player.id || 'no_player';\n            this.id = `${id}_component_${newGUID()}`;\n        }\n\n        this.name = options.name || null;\n\n        // Html5 中 options.el 为 video 标签\n        if (options.el) {\n            this.el = options.el;\n        // 有时侯我们不希望在这里执行 createEl\n        } else if (options.createEl !== false) {\n            // 往往是执行子类的 createEl 方法\n            this.el = this.createEl();\n        }\n\n        evented(this, {eventBusKey: this.el ? 'el' : null});\n\n        // 子元素相关信息\n        this.children = [];\n        this.childNameIndex = {};\n\n        if (options.initChildren !== false) {\n            this.initChildren();\n        }\n\n        this.ready(ready);\n    }\n\n    // dispose 应该做到以下几方面\n    // 1. remove Elements for memory\n    // 2. remove Events for memory\n    // 3. remove reference for GC\n    dispose() {\n        this.trigger({type: 'dispose', bubbles: false});\n\n        if (this.el) {\n            if (this.el.parentNode) {\n                this.el.parentNode.removeChild(this.el);\n            }\n            this.off();\n            this.el = null;\n        }\n\n        if (this.children) {\n            this.children.forEach(child => {\n                if (typeof child.dispose === 'function') {\n                    child.dispose();\n                }\n            });\n            this.children = null;\n            this.childNameIndex = null;\n        }\n    }\n\n    createEl(tagName, properties, attributes) {\n        return Dom.createEl(tagName, properties, attributes);\n    }\n\n    contentEl() {\n        return this.contentEl || this.el;\n    }\n\n    getChild(name) {\n\n        if (!name) {\n            return;\n        }\n\n        return this.childNameIndex[toTitleCase(name)];\n    }\n\n    addChild() {\n\n    }\n\n    removeChild() {\n\n    }\n\n    initChildren() {\n        if (this.options.children && this.options.children.length) {\n            // 目前只支持平行的就够了\n            this.options.children.forEach(componentName => {\n                const ComponentClass = Component.getComponent(toTitleCase(componentName));\n                // @todo 判断 ComponentClass 是否合法\n                if (ComponentClass) {\n                    // @todo this.options 传到子元素里有什么用？\n                    // this.options 里的 el 会跟子元素的 el 冲突\n                    let child = new ComponentClass(this.player);\n\n                    this.children.push(child);\n                    this.childNameIndex[componentName] = child;\n\n                    this.el.appendChild(child.el);\n                }\n            });\n        }\n    }\n\n    ready(fn) {\n        if (fn) {\n            if (this.isReady) {\n                setTimeout(() => {\n                    fn.call(this);\n                }, 1);\n            } else {\n                this.readyQueue = this.readyQueue || [];\n                this.readyQueue.push(fn);\n            }\n        }\n    }\n\n    triggerReady() {\n        this.isReady = true;\n\n        setTimeout(() => {\n            const readyQueue = this.readyQueue;\n            this.readyQueue = [];\n            if (readyQueue && readyQueue.length) {\n                readyQueue.forEach(fn => {\n                    fn.call(this);\n                });\n            }\n\n            this.trigger('ready');\n        }, 1);\n    }\n\n    $(selector, context) {\n        return Dom.$(selector, context || this.contentEl());\n    }\n\n    $$(selector, context) {\n        return Dom.$$(selector, context || this.contentEl());\n    }\n\n    hasClass(classToCheck) {\n        return Dom.hasClass(this.el, classToCheck);\n    }\n\n    addClass(classToAdd) {\n        return Dom.addClass(this.el, classToAdd);\n    }\n\n    removeClass(classToRemove) {\n        return Dom.removeClass(this.el, classToRemove);\n    }\n\n    toggleClass(classToToggle) {\n        return Dom.toggleClass(this.el, classToToggle);\n    }\n\n    show() {\n        this.removeClass('lark-hidden');\n    }\n\n    hide() {\n        this.addClass('lark-hidden');\n    }\n\n    lockShowing() {\n        this.addClass('lark-lock-showing');\n    }\n\n    unlockShowing() {\n        this.removeClass('lark-lock-showing');\n    }\n\n    getAttribute(attribute) {\n        return Dom.getAttribute(this.el, attribute);\n    }\n\n    setAttribute(attribute, value) {\n        return Dom.setAttribute(attribute, value);\n    }\n\n    removeAttribute(attribute) {\n        return Dom.removeAttribute(this.el, attribute);\n    }\n\n    width() {\n\n    }\n\n    height() {\n\n    }\n\n    focus() {\n        this.el.focus();\n    }\n\n    blur() {\n        this.el.blur();\n    }\n\n    static registerComponent(name, component) {\n        // 静态方法，this 是指 Component 这个类而不是他的实例\n        if (!this.components) {\n            this.components = {};\n        }\n\n        this.components[name] = component;\n    }\n\n    static getComponent(name) {\n        return this.components[name];\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}