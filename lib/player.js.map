{"version":3,"sources":["../js/player.js"],"names":["Dom","Events","Fn","Plugin","document","window","Player","tag","options","ready","id","initChildren","createEl","reportTouchActivity","isReady","el","eventBusKey","handleLoadstart","bind","handlePlay","handleWaiting","handleCanplay","handleCanplaythrough","handlePlaying","handleSeeking","handleSeeked","handleFirstplay","handlePause","handleEnded","handleDurationchange","handleTimeupdate","handleTap","handleTouchStart","handleTouchMove","handleTouchEnd","handleFullscreenChange","handleFullscreenError","handleError","handleClick","activeTimeout","on","tech","loadTech","addClass","src","handleLateInit","plugins","Object","keys","forEach","plugin","getPlugin","name","call","Error","techGet","trigger","triggerReady","off","player","dispose","html5StandardOptions","value","key","includes","setAttribute","source","getAttributes","removeAttribute","parentNode","insertBefore","hasAttribute","tagWidth","getAttribute","style","width","tagHeight","height","appendChild","networkState","readyState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","push","event","one","fullscreenchange","fullscreenerror","method","val","ex","dimension","privateDimension","undefined","parsedVal","parseFloat","isNaN","hasStarted","removeClass","activeTimeoutHandler","setTimeout","loop","currentTime","play","paused","pause","data","duration","activeClass","hasClass","parent","target","clearTimeout","clickOnControls","toggleClass","extData","isFullscreen","isFs","fullscreenStatus","fullscreenEnabled","requestFullscreen","supportsFullScreen","enterFullWindow","exitFullscreen","exitFullWindow","warn","playReturn","then","error","err","techCall","children","child","reset","isScrubbing","seconds","buffered","end","length","decimal","Math","min","max","playbackRate","featuresPlaybackRate","defaultPlaybackRate","prototype","prop"],"mappings":"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","file":"player.js","sourcesContent":["/**\n * @file Player.js. player initial && api\n * @author yuhui06(yuhui06@baidu.com)\n * @date 2017/11/6\n */\n\nimport Html5 from './html5';\nimport Component from './component';\nimport {newGUID} from './utils/guid';\nimport * as Dom from './utils/dom';\nimport * as Events from './utils/events';\nimport * as Fn from './utils/fn';\nimport toTitleCase from './utils/to-title-case';\nimport fullscreen from './utils/fullscreen';\nimport evented from './mixins/evented';\nimport {each} from './utils/obj';\nimport * as Plugin from './utils/plugin';\nimport log from './utils/log';\n\n// 确保以下代码都执行一次\nimport './ui/play-button';\nimport './ui/control-bar';\nimport './ui/loading';\nimport './ui/progress-bar-simple';\nimport './ui/error';\n\nconst document = window.document;\n\nclass Player extends Component {\n\n    /**\n     * 初始化一个播放器实例\n     *\n     * @param {Element} tag HTML5 video tag\n     * @param {Object=} options 配置项。可选\n     * @param {Function=} ready 播放器初始化完成后执行的函数\n     */\n    constructor(tag, options, ready) {\n        tag.id = tag.id || `larkplayer-${newGUID()}`;\n\n        options.initChildren = false;\n        options.createEl = false;\n        options.reportTouchActivity = false;\n        options.id = options.id || tag.id;\n\n        super(null, options, ready);\n\n        this.isReady = false;\n\n        // @todo check valid options\n\n        this.tag = tag;\n\n        this.el = this.createEl();\n\n        // 使得 this 具有事件能力(on off one trigger)\n        evented(this, {eventBusKey: 'el'});\n\n        // 需放在 this.loadTech 方法前面\n        this.handleLoadstart = this.handleLoadstart.bind(this);\n        this.handlePlay = this.handlePlay.bind(this);\n        this.handleWaiting = this.handleWaiting.bind(this);\n        this.handleCanplay = this.handleCanplay.bind(this);\n        this.handleCanplaythrough = this.handleCanplaythrough.bind(this);\n        this.handlePlaying = this.handlePlaying.bind(this);\n        this.handleSeeking = this.handleSeeking.bind(this);\n        this.handleSeeked = this.handleSeeked.bind(this);\n        this.handleFirstplay = this.handleFirstplay.bind(this);\n        this.handlePause = this.handlePause.bind(this);\n        this.handleEnded = this.handleEnded.bind(this);\n        this.handleDurationchange = this.handleDurationchange.bind(this);\n        this.handleTimeupdate = this.handleTimeupdate.bind(this);\n        this.handleTap = this.handleTap.bind(this);\n        this.handleTouchStart = this.handleTouchStart.bind(this);\n        this.handleTouchMove = this.handleTouchMove.bind(this);\n        this.handleTouchEnd = this.handleTouchEnd.bind(this);\n        this.handleFullscreenChange = this.handleFullscreenChange.bind(this);\n        this.handleFullscreenError = this.handleFullscreenError.bind(this);\n        this.handleError = this.handleError.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n\n        // 3000ms 后自动隐藏播放器控制条\n        this.activeTimeout = 3000;\n\n        // @todo ios11 在 click 上出了点问题，先注释掉，用 touchend 代替 click 方法\n        // this.on('click', this.handleClick);\n        // this.on('touchstart', this.handleTouchStart);\n\n        this.on('touchend', this.handleTouchEnd);\n\n        if (!this.tech) {\n            this.tech = this.loadTech();\n        }\n\n        this.initChildren();\n\n        this.addClass('lark-paused');\n        // 如果视频已经存在，看下是不是错过了 loadstart 事件\n        if (this.src()) {\n            this.handleLateInit(this.tech.el);\n        }\n\n        // plugins\n        const plugins = this.options.plugins;\n        if (plugins) {\n            Object.keys(plugins).forEach(name => {\n                let plugin = Plugin.getPlugin(name);\n                if (plugin) {\n                    plugin.call(this, plugins[name]);\n                } else {\n                    throw new Error(`Plugin ${name} not exist`);\n                }\n            });\n        }\n\n        // 如果当前视频已经出错，重新触发一次 error 事件\n        if (this.techGet('error')) {\n            Events.trigger(this.tech.el, 'error');\n        }\n\n        this.triggerReady();\n    }\n\n    /**\n     * 销毁播放器\n     *\n     */\n    dispose() {\n        this.trigger('dispose');\n        // 避免 dispose 被调用两次\n        this.off('dispose');\n\n        // if (this.styleEl_ && this.styleEl_.parentNode) {\n        //     this.styleEl_.parentNode.removeChild(this.styleEl_);\n        // }\n\n        if (this.tag && this.tag.player) {\n            this.tag.player = null;\n        }\n\n        if (this.el && this.el.player) {\n            this.el.player = null;\n        }\n\n        if (this.tech) {\n            this.tech.dispose();\n        }\n\n        super.dispose();\n    }\n\n    /**\n     * 创建播放器 DOM （将 video 标签包裹在一层 div 中，全屏及添加其他子元素时需要）\n     *\n     * @return {Element} el 播放器 DOM\n     */\n    createEl() {\n        const tag = this.tag;\n\n        // 处理 options 中的 html5 标准属性\n        const html5StandardOptions = [\n            'autoplay',\n            // 'controls',\n            'height',\n            'loop',\n            'muted',\n            'poster',\n            'preload',\n            'auto',\n            'metadata',\n            'none',\n            'src',\n            'width',\n            'playsinline'\n        ];\n        each(this.options, (value, key) => {\n            if (html5StandardOptions.includes(key)) {\n                Dom.setAttribute(tag, key, value);\n            }\n        });\n\n        if (this.options.source) {\n            // 等到 this.tech 初始化完成后再添加\n            this.ready(() => {\n                this.source(this.options.source);\n            });\n        }\n\n        // 为 video 创建一个父元素，并将 video 的属性全部加在父元素上\n        // 将子元素的 id 转移到父元素上\n        let el = Dom.createEl('div', null, Dom.getAttributes(tag));\n\n        // 为父元素添加 larkplayer class\n        Dom.addClass(el, 'larkplayer');\n\n        Dom.setAttribute(el, 'tabindex', '-1');\n        Dom.setAttribute(tag, 'tabindex', '-1');\n\n        // 子元素原来的 id 加上 -larkplayer 后缀\n        if (tag.id) {\n            tag.id += '-larkplayer';\n        }\n\n        // 将原生控制条移除\n        // 目前只支持使用自定义的控制条\n        tag.removeAttribute('controls');\n\n        // 将 el 插入到 DOM 中\n        if (tag.parentNode) {\n            tag.parentNode.insertBefore(el, tag);\n        }\n\n        // 父元素的 width height 样式继承子元素的值\n        // 将 video 标签的 width height 属性移除，确保 width height 为 100%\n        if (tag.hasAttribute('width')) {\n            let tagWidth = tag.getAttribute('width');\n            el.style.width = tagWidth + 'px';\n            tag.removeAttribute('width');\n        }\n\n        if (tag.hasAttribute('height')) {\n            let tagHeight = tag.getAttribute('height');\n            el.style.height = tagHeight + 'px';\n            tag.removeAttribute('height');\n        }\n\n\n        // @todo safari 好像不支持移动 video DOM?\n        // 将 video 插入到 el 中\n        el.appendChild(tag);\n\n        return el;\n    }\n\n    handleLateInit(el) {\n        // readyState\n        // 0 - HAVE_NOTHING\n        // 没有任何资源可供播放，如果 networkState 的状态是 NETWORK_EMPTY 那么 readyState 的状态一定是 HAVE_NOTHING\n        // 1 - HAVE_METADATA\n        // 视频时长、尺寸已经获取到。这时候还没有可播放的数据，但是跳转到指定时长时播放器不会抛出错误\n        // 2 - HAVE_CURRENT_DATA\n        // 当前帧的播放没有问题，但是不保证后续可以顺畅播放\n        // HAVE_CURRENT_DATA 与 HAVE_METADATA 的区别可以忽略不计\n        // 3 - HAVE_FUTURE_DATA\n        // 当前帧可以播放，后面的一点也可以播放\n        // 一定不是处于最后一帧\n        // 4 - HAVE_ENOUGH_DATA\n        // 已经全部缓冲完或者照目前的速度播放下去不会有问题\n\n        if (el.networkState === 0 || el.networkState === 3) {\n            return;\n        }\n\n        // 在 readyState === 0 的时候，loadstart 事件也有可能已经触发了\n        // NetworkState is set synchronously BUT loadstart is fired at the\n        // end of the current stack, usually before setInterval(fn, 0).\n        // So at this point we know loadstart may have already fired or is\n        // about to fire, and either way the player hasn't seen it yet.\n        // We don't want to fire loadstart prematurely here and cause a\n        // double loadstart so we'll wait and see if it happens between now\n        // and the next loop, and fire it if not.\n        // HOWEVER, we also want to make sure it fires before loadedmetadata\n        // which could also happen between now and the next loop, so we'll\n        // watch for that also.\n        if (el.readyState === 0) {\n            let loadstartFired = false;\n            const setLoadstartFired = function () {\n                loadstartFired = true;\n            };\n\n            this.on('loadstart', setLoadstartFired);\n\n            const triggerLoadstart = function () {\n                if (!loadstartFired) {\n                    this.trigger('loadstart');\n                }\n            };\n\n            // 确保在执行 loadedmetadata 之前，执行了 loadstart 事件\n            this.on('loadedmetadata', triggerLoadstart);\n\n            // 我们的目标是，错过了 loadstart 的话，在 ready 后再手动 trigger 一次\n            this.ready(() => {\n                this.off('loadstart', setLoadstartFired);\n                this.off('loadedmetadata', triggerLoadstart);\n\n                if (!loadstartFired) {\n                    this.trigger('loadstart');\n                }\n            });\n\n            return;\n        }\n\n        const eventsToTrigger = ['loadstart', 'loadedmetadata'];\n\n        if (el.readyState >= 2) {\n            eventsToTrigger.push('loadeddata');\n        }\n\n        if (el.readyState >= 3) {\n            eventsToTrigger.push('canplay');\n        }\n\n        if (el.readyState >= 4) {\n            eventsToTrigger.push('canplaythrough');\n        }\n\n        this.ready(() => {\n            eventsToTrigger.forEach(event => {\n                this.trigger(event);\n            });\n        });\n    }\n\n    // 创建一个 Html5 实例\n    loadTech() {\n        this.options.el = this.tag;\n        let tech = new Html5(this.player, this.options);\n\n        // 注册 video 的各个事件\n        [\n            // 'loadstart',\n            'suspend',\n            'abort',\n            // 'error',\n            'emptied',\n            'stalled',\n            'loadedmetadata',\n            'loadeddata',\n            // 'canplay',\n            // 'canplaythrough',\n            // 'playing',\n            // 'waiting',\n            // 'seeking',\n            // 'seeked',\n            // 'ended',\n            // 'durationchange',\n            // 'timeupdate',\n            'progress',\n            // 'play',\n            // 'pause',\n            'ratechange',\n            'resize',\n            'volumechange'\n        ].forEach(event => {\n            // 对于我们不做任何处理的事件，直接 trigger 出去，提供给用户就行了\n            Events.on(tech.el, event, () => {\n                this.trigger(event);\n            });\n        });\n\n        // 如果我们要先对事件做处理，那先走我们自己的 handlexxx 函数\n        [\n            'loadstart',\n            'canplay',\n            'canplaythrough',\n            'error',\n            'playing',\n            'timeupdate',\n            'waiting',\n            'seeking',\n            'seeked',\n            'ended',\n            'durationchange',\n            'play',\n            'pause'\n        ].forEach(event => {\n            Events.on(tech.el, event, this[`handle${toTitleCase(event)}`]);\n        });\n\n\n        // 绑定 firstPlay 事件\n        // 先 off 确保只绑定一次\n        this.off('play', this.handleFirstplay);\n        this.one('play', this.handleFirstplay);\n\n        // 全屏事件\n        Events.on(tech.el, 'fullscreenchange', this.handleFullscreenChange);\n        fullscreen.fullscreenchange(this.handleFullscreenChange);\n        fullscreen.fullscreenerror(this.handleFullscreenError);\n\n        return tech;\n    }\n\n    techGet(method) {\n        return this.tech[method]();\n    }\n\n    techCall(method, val) {\n        try {\n            this.tech[method](val);\n        } catch (ex) {\n            log(ex);\n        }\n    }\n\n    width(value) {\n        return this.dimension('width', value);\n    }\n\n    height(value) {\n        return this.dimension('height', value);\n    }\n\n    dimension(dimension, value) {\n        const privateDimension = dimension + '_';\n\n        if (value === undefined) {\n            return this[privateDimension] || 0;\n        }\n\n        if (value === '') {\n            this[privateDimension] = undefined;\n        } else {\n            const parsedVal = parseFloat(value);\n            if (isNaN(parsedVal)) {\n                log(`Improper value ${value} supplied for ${dimension}`);\n                return;\n            }\n\n            this[privateDimension] = parsedVal;\n        }\n\n        // this.updateStyleEl_();\n    }\n\n    // @dprecated\n    // videojs 中的方法，目前没用到\n    hasStart(hasStarted) {\n        if (hasStarted !== undefined) {\n            if (this.hasStarted !== hasStarted) {\n                this.hasStarted = hasStarted;\n                if (hasStarted) {\n                    this.addClass('lark-has-started');\n                    this.trigger('firstplay');\n                } else {\n                    this.removeClass('lark-has-started');\n                }\n            }\n            return;\n        }\n\n        return !!this.hasStarted;\n    }\n\n    // = = = = = = = = = = = = = 事件处理 = = = = = = = = = = = = = =\n\n    handleLoadstart() {\n        this.addClass('lark-loadstart');\n\n        this.trigger('loadstart');\n    }\n\n    handlePlay() {\n        // @todo removeClass 支持一次 remove 多个 class\n        this.removeClass('lark-loadstart');\n        this.removeClass('lark-ended');\n        this.removeClass('lark-paused');\n        this.removeClass('lark-error');\n        this.removeClass('lark-seeking');\n        this.removeClass('lark-waiting');\n        this.addClass('lark-playing');\n\n\n        this.trigger('play');\n    }\n\n    handleWaiting() {\n        this.addClass('lark-waiting');\n\n        this.trigger('waiting');\n        // 处于 waiting 状态后一般都会伴随一次 timeupdate，即使那之后视频还是处于卡顿状态\n        // this.one('timeupdate', () => this.removeClass('lark-waiting'));\n    }\n\n    handleCanplay() {\n        this.removeClass('lark-waiting');\n\n        this.trigger('canplay');\n    }\n\n    handleCanplaythrough() {\n        this.removeClass('lark-waiting');\n\n        this.trigger('canplaythrough');\n    }\n\n    handlePlaying() {\n        this.removeClass('lark-waiting');\n        this.removeClass('lark-loadstart');\n\n        this.trigger('playing');\n    }\n\n    handleSeeking() {\n        this.addClass('lark-seeking');\n\n        this.trigger('seeking');\n    }\n\n    handleSeeked() {\n        this.removeClass('lark-seeking');\n\n        this.trigger('seeked');\n    }\n\n    handleFirstplay() {\n        // @todo 不清楚有什么用\n        this.addClass('lark-has-started');\n\n        //\n        this.addClass('lark-user-active');\n        this.activeTimeoutHandler = setTimeout(() => {\n            this.removeClass('lark-user-active');\n        }, this.activeTimeout);\n\n        this.trigger('firstplay');\n    }\n\n    handlePause() {\n        this.removeClass('lark-playing');\n        this.addClass('lark-paused');\n\n        this.trigger('pause');\n    }\n\n    handleEnded() {\n        this.addClass('lark-ended');\n\n        // 如果播放器自动循环了，在 chrome 上不会触发 ended 事件\n        // @todo 待验证其他浏览器\n        if (this.options.loop) {\n            this.currentTime(0);\n            this.play();\n        } else if (!this.paused()) {\n            this.pause();\n        }\n\n        this.trigger('ended');\n    }\n\n    handleDurationchange() {\n        let data = {\n            duration: this.techGet('duration')\n        };\n\n        this.trigger('durationchange', data);\n    }\n\n    handleTimeupdate() {\n        let data = {\n            currentTime: this.techGet('currentTime')\n        };\n        // data.currentTime = this.techGet('currentTime');\n\n        this.trigger('timeupdate', data);\n    }\n\n    handleTap() {\n\n    }\n\n    handleTouchStart(event) {\n        const activeClass = 'lark-user-active';\n        // 当控制条显示并且手指放在控制条上时\n        if (this.hasClass(activeClass)) {\n            if (Dom.parent(event.target, 'lark-play-button')\n                || Dom.parent(event.target, 'lark-control-bar')) {\n\n                clearTimeout(this.activeTimeoutHandler);\n            }\n\n            Events.on(document, 'touchmove', this.handleTouchMove);\n            Events.on(document, 'touchend', this.handleTouchEnd);\n        }\n    }\n\n    handleTouchMove(event) {\n\n    }\n\n    handleTouchEnd(event) {\n        // const activeClass = 'lark-user-active';\n        // clearTimeout(this.activeTimeoutHandler);\n\n        // this.activeTimeoutHandler = setTimeout(() => {\n        //     this.removeClass(activeClass);\n        // }, this.activeTimeout);\n\n        // Events.off(document, 'touchmove', this.handleTouchMove);\n        // Events.off(document, 'touchend', this.handleTouchEnd);\n\n        // @todo 临时将 click 事件转移到 touchend，ios 11 下 click 事件目前有问题\n        // 处于暂停状态时，点击播放器任何位置都均继续播放\n        if (this.paused()) {\n            this.play();\n        }\n\n        clearTimeout(this.activeTimeoutHandler);\n\n        const activeClass = 'lark-user-active';\n\n        // 点在播放按钮或者控制条上，（继续）展现控制条\n        let clickOnControls = false;\n        // @todo 处理得不够优雅\n        if (Dom.parent(event.target, 'lark-play-button')\n            || Dom.parent(event.target, 'lark-control-bar')) {\n\n            clickOnControls = true;\n        }\n\n        if (!clickOnControls) {\n            this.toggleClass(activeClass);\n        }\n\n        if (this.hasClass(activeClass)) {\n            this.activeTimeoutHandler = setTimeout(() => {\n                this.removeClass(activeClass);\n            }, this.activeTimeout);\n        }\n    }\n\n    // Html5 中会处理一次这个事件，会传入 extData\n    handleFullscreenChange(event, extData = {}) {\n        let data = {};\n\n        if (extData.isFullscreen !== undefined) {\n            this.isFullscreen(extData.isFullscreen);\n        }\n\n        if (this.isFullscreen()) {\n            data.isFullscreen = true;\n            this.addClass('lark-fullscreen');\n        } else {\n            data.isFullscreen = false;\n            this.removeClass('lark-fullscreen');\n            // lark-fullscreen-adjust 本应该在 exitFullscreen 函数中调用，但用户可能按 ESC 返回，不会走到 exitFullscreen 函数\n            this.removeClass('lark-fullscreen-adjust');\n        }\n\n        this.trigger('fullscreenchange', data);\n    }\n\n    handleFullscreenError() {\n        this.trigger('fullscreenerror');\n    }\n\n    handleError(event) {\n        this.removeClass('lark-playing');\n        // this.removeClass('lark-seeking');\n        this.addClass('lark-error');\n\n        this.trigger('error', this.techGet('error'));\n    }\n\n    handleClick(event) {\n        // 处于暂停状态时，点击播放器任何位置都均继续播放\n        if (this.paused()) {\n            this.play();\n        }\n\n        clearTimeout(this.activeTimeoutHandler);\n\n        const activeClass = 'lark-user-active';\n\n        // 点在播放按钮或者控制条上，（继续）展现控制条\n        let clickOnControls = false;\n        // @todo 处理得不够优雅\n        if (Dom.parent(event.target, 'lark-play-button')\n            || Dom.parent(event.target, 'lark-control-bar')) {\n\n            clickOnControls = true;\n        }\n\n        if (!clickOnControls) {\n            this.toggleClass(activeClass);\n        }\n\n        if (this.hasClass(activeClass)) {\n            this.activeTimeoutHandler = setTimeout(() => {\n                this.removeClass(activeClass);\n            }, this.activeTimeout);\n        }\n    }\n\n\n    // = = = = = = = = = = = = = 对外 api = = = = = = = = = = = = = =\n\n    // = = = func = = =\n\n    isFullscreen(isFs) {\n        if (isFs !== undefined) {\n            this.fullscreenStatus = isFs;\n        } else {\n            return this.fullscreenStatus;\n        }\n    }\n\n    requestFullscreen() {\n        this.isFullscreen(true);\n\n        if (fullscreen.fullscreenEnabled()) {\n            // 利用 css 强制设置 top right bottom left margin 的值为 0\n            // 避免因为定位使得元素全屏时看不到\n            // 应该不会出现什么问题\n            this.addClass('lark-fullscreen-adjust');\n            fullscreen.requestFullscreen(this.el);\n        } else if (this.tech.supportsFullScreen()) {\n            this.techGet('enterFullScreen');\n        } else {\n            this.enterFullWindow();\n            this.trigger('fullscreenchange');\n        }\n    }\n\n    exitFullscreen() {\n        this.isFullscreen(false);\n\n        if (fullscreen.fullscreenEnabled() && fullscreen.isFullscreen()) {\n            this.removeClass('lark-fullscreen-adjust');\n            fullscreen.exitFullscreen();\n        } else if (this.tech.supportsFullScreen()) {\n            this.techGet('exitFullScreen');\n        } else {\n            this.exitFullWindow();\n            this.trigger('fullscreenchange');\n        }\n    }\n\n    enterFullWindow() {\n        this.addClass('lark-full-window');\n    }\n\n    fullWindowOnEscKey() {\n\n    }\n\n    exitFullWindow() {\n        this.removeClass('lark-full-window');\n    }\n\n    play() {\n        if (!this.src()) {\n            log.warn('No video src applied');\n            return;\n        }\n\n        // changingSrc 现在用不上，后面支持 source 的时候可能会用上\n        if (this.isReady && this.src()) {\n            // play 可能返回一个 Promise\n            const playReturn = this.techGet('play');\n            if (playReturn && playReturn.then) {\n                playReturn.then(null, err => {\n                    // @todo 这里返回的 err 可以利用下？\n                    log.error(err);\n                });\n            }\n        }\n    }\n\n    pause() {\n        this.techCall('pause');\n    }\n\n    load() {\n        this.techCall('load');\n    }\n\n    // reset video and ui\n    // @todo 感觉这个 reset 有点费事而且费性能\n    /**\n     * 重置播放器\n     * 会移除播放器的 src source 属性，并重置各 UI 样式\n     */\n    reset() {\n        this.pause();\n\n        // reset video tag\n        this.techCall('reset');\n\n        // reset ui\n        this.children.forEach(child => {\n            child && child.reset && child.reset();\n        });\n    }\n\n    // = = = get attr = = =\n\n    /**\n     * 判断当前是否是暂停状态\n     *\n     * @return {boolean} 当前是否是暂停状态\n     */\n    paused() {\n        return this.techGet('paused');\n    }\n\n    /**\n     * 获取已播放时长\n     *\n     * @return {number} 当前已经播放的时长，以秒为单位\n     */\n    played() {\n        return this.techGet('played');\n    }\n\n    scrubbing(isScrubbing) {\n\n    }\n\n    /**\n     * 获取／设置 当前时间\n     *\n     * @param {number=} seconds 秒数，可选。\n     *                  传参则设置视频当前时刻\n     *                  不传参，则获取视频当前时刻\n     * @return {number|undefined} 不传参时返回视频当前时刻；传参数时设置视频当前时刻，返回 undefined\n     */\n    currentTime(seconds) {\n        if (seconds !== undefined) {\n            this.techCall('setCurrentTime', seconds);\n        } else {\n            return this.techGet('currentTime') || 0;\n        }\n    }\n\n    // @todo duration 可以设置？\n    duration() {\n        return this.techGet('duration');\n    }\n\n    remainingTime() {\n        return this.duration() - this.currentTime();\n    }\n\n    buffered() {\n        return this.techGet('buffered');\n    }\n\n    bufferedPercent() {\n\n    }\n\n    bufferedEnd() {\n        const buffered = this.buffered();\n        const duration = this.duration();\n        if (buffered && duration) {\n            return buffered.end(buffered.length - 1) === duration;\n        } else {\n            return false;\n        }\n    }\n\n    seeking() {\n        return this.techGet('seeking');\n    }\n\n    seekable() {\n        return this.techGet('seekable');\n    }\n\n    ended() {\n        return this.techGet('ended');\n    }\n\n    networkState() {\n        return this.techGet('networkState');\n    }\n\n    videoWidth() {\n        return this.techGet('videoWidth');\n    }\n\n    videoHeight() {\n        return this.techGet('videoHeight');\n    }\n\n    // = = = set && get attr= = =\n\n    volume(decimal) {\n        if (decimal !== undefined) {\n            this.techCall('setVolume', Math.min(1, Math.max(decimal, 0)));\n        } else {\n            return this.techGet('volume');\n        }\n    }\n\n    src(src) {\n        if (src !== undefined) {\n            if (src !== this.techGet('src')) {\n                // 应该先暂停一下比较好\n                this.techCall('pause');\n                this.techCall('setSrc', src);\n\n                // src 改变后，重新绑定一次 firstplay 方法\n                // 先 off 确保只绑定一次\n                this.off('play', this.handleFirstplay);\n                this.one('play', this.handleFirstplay);\n            }\n        } else {\n            return this.techGet('src');\n        }\n    }\n\n    /**\n     * 获取播放器 source 数据或者设置 source 标签\n     *\n     * @param {Array=} source 视频源，可选\n     * @return {Array|undefined} 若不传参则获取 source 数据；传参则设置 source 标签，返回 undefined\n     */\n    source(source) {\n        if (source !== undefined) {\n            this.techCall('source', source);\n        } else {\n            return this.techGet('source');\n        }\n    }\n\n    playbackRate(playbackRate) {\n        if (playbackRate !== undefined) {\n            this.techCall('setPlaybackRate', playbackRate);\n        } else if (this.tech && this.tech.featuresPlaybackRate) {\n            return this.techGet('playbackRate');\n        } else {\n            return 1.0;\n        }\n    }\n\n    defaultPlaybackRate(defaultPlaybackRate) {\n        if (defaultPlaybackRate !== undefined) {\n            this.techCall('setDefaultPlaybackRate', defaultPlaybackRate);\n        } else if (this.tech && this.tech.featuresPlaybackRate) {\n            return this.techGet('defaultPlaybackRate');\n        } else {\n            return 1.0;\n        }\n    }\n\n}\n\n[\n    /**\n     * 设置或获取 muted 属性的值\n     *\n     * @param {boolean=} isMuted（静音） 可选。设置 muted 属性的值\n     * @return {undefined|boolean} undefined 或 当前 muted 属性值\n     */\n    'muted',\n\n    /**\n     * 设置或获取 defaultMuted（默认静音） 属性的值\n     *\n     * @param {boolean=} isDefaultMuted 可选。设置 defaultMuted 属性的值\n     * @return {undefined|boolean} undefined 或 当前 defaultMuted 的值\n     */\n    'defaultMuted',\n\n    /**\n     * 设置或获取 autoplay（自动播放，大多数移动端浏览器不允许视频自动播放） 属性的值\n     *\n     * @param {boolean=} isAutoplay 可选。设置 autoplay 属性的值\n     * @return {undefined|boolean} undefined 或 当前 autoplay 值\n     */\n    'autoplay',\n\n    /**\n     * 设置或获取 loop（循环播放） 属性的值\n     *\n     * @param {boolean=} isLoop 可选。设置 loop 属性的值\n     * @return {undefined|boolean} undefined 或 当前 loop 值\n     */\n    'loop',\n    /**\n     * 设置或获取 playsinline（是否内联播放，ios10 以上有效） 属性的值\n     *\n     * @param {boolean=} isPlaysinline 可选。设置 playsinline 属性的值\n     * @return {undefined|boolean} undefined 或 当前 playsinline 值\n     */\n    'playsinline',\n\n    /**\n     * 设置或获取 poster（视频封面） 属性的值\n     *\n     * @param {string=} poster 可选。设置 poster 属性的值\n     * @return {undefined|string} undefined 或 当前 poster 值\n     */\n    'poster',\n\n    /**\n     * 设置或获取 preload（预加载的数据） 属性的值\n     *\n     * @param {string=} preload 可选。设置 preload 属性的值（none、auto、metadata）\n     * @return {undefined|string} undefined 或 当前 preload 值\n     */\n    'preload'\n].forEach(prop => {\n    // 这里别用箭头函数，不然 this 就指不到 Player.prototype 了\n    Player.prototype[prop] = function (val) {\n        if (val !== undefined) {\n            this.techCall(`set${toTitleCase(prop)}`, val);\n            this.options[prop] = val;\n        } else {\n            this.techGet(prop);\n        }\n    };\n});\n\nPlayer.prototype.options = {\n    children: [\n        'playButton',\n        'progressBarSimple',\n        'controlBar',\n        'loading',\n        'error'\n    ]\n};\n\nexport default Player;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}