{"version":3,"sources":["../../js/utils/events.js"],"names":["fixEvent","on","trigger","off","one","DomData","document","window","cleanUpEvents","elem","type","data","getData","handlers","removeEventListener","dispatcher","detachEvent","Object","getOwnPropertyNames","length","disabled","removeData","handleMultipleEvents","func","types","callback","forEach","event","returnTure","returnFalse","isPropagationStopped","old","key","preventDefault","target","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","documentElement","body","pageX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","which","charCode","keyCode","button","isPassiveSupported","opts","defineProperty","get","addEventListener","ex","passiveEvents","fn","Array","isArray","guid","push","extraData","handlersClone","slice","i","call","console","log","options","includes","passive","attachEvent","hash","hasData","parent","parentNode","ownerDocument","bubbles","targetData","removeType","curType","Error","filter","value","executeOnlyOnce","apply","arguments"],"mappings":"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","file":"events.js","sourcesContent":["/**\n * @file 事件系统，借用系统事件能力的同时，能添加自定义事件\n * @author yuhui06@baidu.com\n * @date 2017/11/3\n */\n\nimport toTitleCase from './to-title-case';\nimport * as DomData from './dom-data';\nimport {newGUID} from './guid';\n\n// data.disabled\n// data.dispatcher\n// data.handlers\n// let data = {};\n\nconst document = window.document;\n\n/**\n * 清理事件相关的数据(Clean up the listener cache and dispatchers)\n *\n * @inner\n *\n * @param {Element} elem 待清理的元素\n * @param {string} type 待清理的事件类型\n */\nfunction cleanUpEvents(elem, type) {\n    const data = DomData.getData(elem);\n\n    // 如果该 type 下已经没有回调函数，那就取消掉之前注册的事件并且删除不必要的属性\n    if (data.handlers && data.handlers[type] && data.handlers[type]['length'] === 0) {\n        // 删除不必要的属性\n        delete data.handlers[type];\n\n        // 删除之前注册的事件\n        if (elem.removeEventListener) {\n            elem.removeEventListener(type, data.dispatcher, false);\n        } else if (elem.detachEvent) {\n            elem.detachEvent('on' + type, data.dispatcher);\n        }\n    }\n\n    // 如果 hanlders 下已经没有 type，那可以清除 data 下的所有属性了\n    if (Object.getOwnPropertyNames(data.handlers).length === 0) {\n        delete data.handlers;\n        delete data.dispatcher;\n        delete data.disabled;\n    }\n\n    // 如果 data 的属性已经被清空，那么对应 DOM 上的数据相关的属性也可以清除了\n    if (Object.getOwnPropertyNames(data).length === 0) {\n        DomData.removeData(elem);\n    }\n}\n\n/**\n * 循环 types 数组，给每个 type 都执行指定的方法\n *\n * 将需要在不同函数里执行的循环操作抽离出来\n *\n * @inner\n *\n * @param {Function} func 要循环执行的函数\n * @param {Element} elem 宿主元素\n * @param {Array} types 类型数组\n * @param {Function} callback 要注册的回调函数\n */\nfunction handleMultipleEvents(func, elem, types, callback) {\n    if (types && types.length) {\n        types.forEach(type => func(elem, type, callback));\n    }\n}\n\n/**\n * 修复事件，使其具有标准的属性\n *\n * @param {Event|Object} event 待修复的事件\n * @return {Object} 修复后的事件\n */\nexport function fixEvent(event) {\n    function returnTure() {\n        return true;\n    }\n\n    function returnFalse() {\n        return false;\n    }\n\n    // Test if fixing up is needed\n    // Used to check if !event.stopPropagation instead of isPropagationStopped\n    // But native events return true for stopPropagation, but don't have\n    // other expected methods like isPropagationStopped. Seems to be a problem\n    // with the Javascript Ninja code. So we're just overriding all events now.\n    if (!event || !event.isPropagationStopped) {\n        const old = event || window.event;\n\n        event = {};\n\n        // Clone the old object so that we can modify the values event = {};\n        // IE8 Doesn't like when you mess with native event properties\n        // Firefox returns false for event.hasOwnProperty('type') and other props\n        //  which makes copying more difficult.\n        // TODO: Probably best to create a whitelist of event props\n        for (const key in old) {\n            // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n            // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n            // and webkitMovementX/Y\n            if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation'\n                && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n                // Chrome 32+ warns if you try to copy deprecated returnValue, but\n                // we still want to if preventDefault isn't supported (IE8).\n                if (!(key === 'returnValue' && old.preventDefault)) {\n                    event[key] = old[key];\n                }\n            }\n        }\n\n        // 事件发生在此元素上\n        if (!event.target) {\n            event.target = event.srcElement || document;\n        }\n\n        // 跟事件发生元素有关联的元素\n        if (!event.relatedTarget) {\n            event.relatedTarget = event.fromElement === event.target\n                ? event.toElement\n                : event.fromElement;\n        }\n\n        // 阻止默认事件\n        event.preventDefault = function () {\n            if (old.preventDefault) {\n                old.preventDefault();\n            }\n\n            event.returnValue = false;\n            old.returnValue = false;\n            event.defaultPrevented = true;\n        };\n\n        event.defaultPrevented = false;\n\n        // 阻止事件冒泡\n        event.stopPropagation = function () {\n            if (old.stopPropagation) {\n                old.stopPropagation();\n            }\n\n            event.cancelBubble = true;\n            old.cancelBubble = true;\n            event.isPropagationStopped = returnTure;\n        };\n\n        event.isPropagationStopped = returnFalse;\n\n        // 阻止事件冒泡，并且当前阶段的事件也不执行\n        event.stopImmediatePropagation = function () {\n            if (old.stopImmediatePropagation) {\n                old.stopImmediatePropagation();\n            }\n\n            event.isImmediatePropagationStopped = returnTure;\n            event.stopPropagation();\n        };\n\n        event.isImmediatePropagationStopped = returnFalse;\n\n        // 鼠标位置\n        if (event.clientX != null) {\n            const doc = document.documentElement;\n            const body = document.body;\n\n            // clientX 代表与窗口左边的距离，根据页面滚动不同，是可变的\n            // pageX 代表相对于文档左边的距离，是个常量\n            event.pageX = event.clientX\n                + (doc && doc.scrollLeft || body && body.scrollLeft || 0)\n                - (doc && doc.clientLeft || body && body.clientLeft || 0);\n\n            event.pageY = event.clientY\n                + (doc && doc.scrollTop || body && body.scrollTop || 0)\n                - (doc && doc.clientTop || body && body.clientTop || 0);\n        }\n\n        // 键盘按键\n        event.which = event.charCode || event.keyCode;\n\n        // 鼠标按键\n        // 0: 左键\n        // 1: 中间按钮\n        // 2: 右键\n        if (event.button != null) {\n            // em... 这里应该是 与运算，就没去细究了\n            /* eslint-disable */\n            event.button = (event.button & 1 ? 0 :\n                (event.button & 4 ? 1 :\n                    (event.button & 2 ? 2 : 0)));\n            /* eslint-disable */\n        }\n    }\n\n    return event;\n}\n\n/**\n * 是否支持 passive event listeners\n * passive event listeners 可以提升页面的滚动性能\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport let isPassiveSupported = false;\n(function () {\n    try {\n        const opts = Object.defineProperty({}, 'passive', {\n            get() {\n                // 如果浏览器会来读取这个属性，说明支持该功能\n                isPassiveSupported = true;\n            }\n        });\n\n        window.addEventListener('test', null, opts);\n    } catch (ex) {\n    }\n})();\n\n/**\n * @const 目前 chrome 支持的 passive event\n */\nconst passiveEvents = [\n    'touchstart',\n    'touchmove'\n];\n\n/**\n * 向元素注册监听函数\n *\n * @todo explain\n * @param {Element|Object} 要绑定事件的元素／对象，这里允许 Object 是考虑到后面讲事件处理作为一种能力赋予任何一个对象\n * @param {string|Array} 事件类型，可以是数组的形式\n * @param {Function} fn 要注册的回调函数\n */\nexport function on(elem, type, fn) {\n    if (Array.isArray(type)) {\n        return handleMultipleEvents(on, elem, type, fn);\n    }\n\n\n    // 对于自定义的事件，我们只能自己存起来\n    // 这样在手动触发时，才能拿出来发动一把\n    let data = DomData.getData(elem);\n    if (!data.handlers) {\n        data.handlers = {};\n    }\n\n    if (!data.handlers[type]) {\n        data.handlers[type] = [];\n    }\n\n    if (!fn.guid) {\n        fn.guid = newGUID();\n    }\n\n    // 我们往 handlers[type] 里面存函数，然后通过 dispatcher 调用\n    data.handlers[type].push(fn);\n\n    if (!data.dispatcher) {\n        /**\n         * trigger 的时候，我们通过调用这个函数，来调用注册在对应 elem 的对应 type 上的所有函数\n         *\n         * @param {Event} event 事件\n         * @param {Mixed} extraData 传入函数的数据\n         */\n        data.dispatcher = function (event, extraData) {\n            if (data.disabled) {\n                return;\n            }\n\n            // 通过 event.type 找到之前注册的回调函数\n            const handlers = data.handlers[event.type];\n\n            event = fixEvent(event);\n\n            if (handlers) {\n                // 鲁棒性。如果事件在执行过程中发生变动，不至于影响原来注册的事件，从而影响下次执行\n                const handlersClone = handlers.slice(0);\n\n                for (let i = 0; i < handlersClone.length; i++) {\n                    // 如果执行了 stopImmediatePropagation，那我们应该立即停止\n                    if (event.isImmediatePropagationStopped()) {\n                        break;\n                    } else {\n                        try {\n                            // 在当前 elem 上调用，同时将 event extraData 传过去当参数\n                            handlersClone[i].call(elem, event, extraData);\n                        } catch (ex) {\n                            console.log(ex);\n                        }\n                    }\n                }\n            }\n        };\n    }\n\n    // 只注册一次\n    if (data.handlers[type]['length'] === 1) {\n        // 系统事件，借用系统的能力调起\n        // 注意 这里注册的是 dispatcher 函数，通过 dispatcher 来统一地管理 fn\n        if (elem.addEventListener) {\n            // passive event listener\n            let options = false;\n            if (isPassiveSupported && passiveEvents.includes(type)) {\n                options = {passive: true};\n            }\n\n            elem.addEventListener(type, data.dispatcher, options);\n        } else if (elem.attachEvent) {\n            elem.attachEvent(('on' + type), data.dispatcher);\n        }\n    }\n}\n\n/**\n * 触发事件\n *\n * @param {string} 事件类型\n * @param {Mixed} hash 事件触发时，传入的数据\n */\nexport function trigger(elem, event, hash) {\n    // 先判断 hasData，避免直接用 getData 给 elem 添加额外的数据（具体可参见 DomData:getData）\n    const data = DomData.hasData(elem) ? DomData.getData(elem) : {};\n    // 事件冒泡\n    const parent = elem.parentNode || elem.ownerDocument;\n\n    // 将 string 包装成正常的事件类型\n    if (typeof event === 'string') {\n        event = {type: event, target: elem};\n    }\n\n    // 标准化\n    event = fixEvent(event);\n\n    // 如果有事件调度函数，那我们可以通过这个函数去调用注册在这个元素上的对应类型的事件\n    // 理论上注册过事件后就会有这个函数\n    if (data.dispatcher) {\n        data.dispatcher.call(elem, event, hash);\n    }\n\n    // 冒泡吧\n    // 如果还有父元素，并且没有手动阻止事件冒泡，且这个事件本身支持冒泡（media events 不支持），那我们继续\n    if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n        // 注意 这里就直接传我们标准化过的 event 了，不用再传 type\n        trigger.call(null, parent, event, hash);\n    // 如果已经到最上层的元素，并且没有被阻止事件的默认行为，那我们看看有没有系统对这种事件有没有默认行为要执行\n    } else if (!parent && !event.defaultPrevented) {\n        const targetData = DomData.getData(event.target);\n        // 如果系统也在这个事件上注册有函数\n        if (event.target[event.type]) {\n            // 在执行系统的事件函数前，先关闭我们自己的事件分发，因为已经执行过一次了（否则之前的那些事件有会被执行一次）\n            targetData.disabled = true;\n\n            // 执行系统默认事件\n            if (typeof event.target[event.type] === 'function') {\n                event.target[event.type]();\n            }\n\n            // 恢复 disable 参数，避免对下次事件造成影响\n            targetData.disabled = false;\n        }\n    }\n\n    // 告知调用者这个事件的默认行为是否被阻止了\n    // @see https://www.w3.org/TR/DOM-Level-3-Events/#event-flow-default-cancel\n    return !event.defaultPrevented;\n}\n\n/**\n * 移除已注册的事件\n *\n * @param {Element} elem 要移除事件的元素\n * @param {string|Array=} 事件类型。可选，如果没有 type 参数，则移除该元素上所有的事件\n * @param {Function=} 要移除的指定的函数。可选，如果没有此参数，则移除该 type 上的所有事件\n *\n * @desc\n *    1) 请按照参数顺序传参数\n */\nexport function off(elem, type, fn) {\n    if (!DomData.hasData(elem)) {\n        return;\n    }\n\n    let data = DomData.getData(elem);\n\n    if (!data.handlers) {\n        return;\n    }\n\n    if (Array.isArray(type)) {\n        return handleMultipleEvents(off, elem, type, fn);\n    }\n\n    function removeType(curType) {\n        data.handlers[curType] = [];\n        cleanUpEvents(elem, curType);\n    }\n\n    // 避免不传 type，直接传 fn 的情况\n    if (typeof type === 'function') {\n        throw new Error('注销指定事件函数前，先指定事件类型');\n    }\n\n    // 没有传 type，则移除所有事件\n    if (!type) {\n        for (let i in data.handlers) {\n            removeType(i);\n        }\n\n        return;\n    }\n\n    // 传了 type\n    let handlers = data.handlers[type];\n\n    if (!handlers) {\n        return;\n    }\n\n    // 传了 type，但没传 fn，则移除该 type 下的所有事件\n    if (type && !fn) {\n        removeType(type);\n        return;\n    }\n\n    // 传了 type 且传了 fn，则移除 type 下的 fn\n    // 如果这个函数之前注册过，就会有 guid 属性\n    if (fn.guid) {\n        if (handlers && handlers.length) {\n            data.handlers[type] = handlers.filter(value => value.guid !== fn.guid);\n        }\n    }\n\n    // 最后需要再扫描下，有没有刚好被移除了所有函数的 type 或者 handlers\n    cleanUpEvents(elem, type);\n}\n\n/**\n * 在指定事件下，只触发指定函数一次\n *\n * @param {Element} elem 要绑定事件的元素\n * @param {string|Array} type 绑定的事件类型\n * @param {Function} 注册的回调函数\n */\nexport function one(elem, type, fn) {\n    if (Array.isArray(type)) {\n        return handleMultipleEvents(one, elem, type, fn);\n    }\n\n    function executeOnlyOnce() {\n        off(elem, type, executeOnlyOnce);\n        fn.apply(this, arguments);\n    }\n\n    // 移除函数需要 guid 属性\n    executeOnlyOnce.guid = fn.guid = fn.guid || newGUID();\n\n    on(elem, type, executeOnlyOnce);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}